<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Argumentos de las Funciones</title><META http-equiv=Content-Language content=es><META content="Programación,Programas,Aplicaciones,Ejercicios, Ejemplos,Tutoriales,Manuales" name=description>
<META content="javascript, Lenguaje javascript, Manual javascript, Tutorial javascript, ejercicios javascript" name=description>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="keywords" content="javascript, Lenguaje javascript, Manual javascript, Tutorial javascript, ejercicios javascript">
<meta name="description" content="javascript">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
 
  <link href="../styles/estilos.css" rel="stylesheet" type="text/css">
</head>
  
<body>
<table width="555" height="384" align="left" background="../imagenes/fondologo.jpg">
  <tr> 
    <td height="38" colspan="2"><h2>Argumentos de las Funciones</h2> 
      </div></td>
  </tr>
  <tr> 
    <td colspan="2"><p>Los argumentos de una funci&oacute;n permiten que el resultado var&iacute;e seg&uacute;n el valor indicado en la misma. </p>
      <p>Los argumentos pueden ser variables, numeros u objetos. Vease en el siguiente scriptel metodo de definici&oacute;n de los argumentos de la funci&oacute;n y posteriormente, el modo de llamar a cada argumento: </p>
      <p>Para que una funci&oacute;n devuelva el resultado de una serie operaciones procedentes de la misma funci&oacute;n , utilizaremos la instrucci&oacute;n return. </p>
      <p>&nbsp; </p>
      <p>&lt;HTML&gt; </p>
      <p>&lt;SCRIPT LANGUAJE=”Javascript”&gt; </p>
      <p>function mitad(valor){ </p>
      <p>return valor; </p>
      <p>} </p>
      <p>&lt;/SCRIPT&gt;</p>
      <p>&lt;BODY&gt; </p>
      <p>&lt;SCRIPT LANGUAJE=”Javascript”&gt; </p>
      <p>document.write(“La midad de 100 es ”+ mitad(100)); </p>
      <p>&lt;/SCRIPT&gt; </p>
      <p>&lt;/BODY&gt; </p>
      <p>&lt;/HTML&gt; </p>
      <p>&nbsp; </p>
      <h3>Argumentos de la funci&oacute;n </h3>
      <p>&nbsp; </p>
      <p>Los argumentos de una funci&oacute;n permiten que el resultado varie seg&uacute;n el valor indicado en la misma. Los argumentos pueden ser variables, n&uacute;meros u objetos: </p>
      <p>&lt;HTML&gt; </p>
      <p>&lt;SCRIPT LANGUAJE=”Javascript”&gt; </p>
      <p>function mensaje(respuesta){ </p>
      <p>if(respuesta==0) </p>
      <p>alert(“La respuesta es correcta”); </p>
      <p>if(respuesta==2) </p>
      <p>alert(“La respuesta es incorrecta”); </p>
      <p>if(respuesta==1) </p>
      <p>alert(“vaya disparate debes repetir curso”); </p>
      <p>if(respuesta&gt;=3) </p>
      <p>alert(“respuesta fuera de rango”); </p>
      <p>} </p>
      <p>&lt;/SCRIPT&gt;</p>
      <p>&lt;BODY&gt; </p>
      <p>&lt;SCRIPT LANGUAJE=”Javascript”&gt; </p>
      <p>mensaje(0); </p>
      <p>mensaje(1); </p>
      <p>mensaje(2); </p>
      <p>mensaje(5);</p>
      <p>&lt;/SCRIPT&gt; </p>
      <p>&lt;/BODY&gt; </p>
    <p>&lt;/HTML&gt; </p>
    <h3>Los M&eacute;todos </h3>
    <p>&nbsp; </p>
    <p>Un m&eacute;todo es una funci&oacute;n asociada a un objeto y en particular a los objetos del tipo que las define. Asi pues, un m&eacute;todo es una acci&oacute;n que ejecutamos sobre los datos de un objeto. </p>
    <p>Los m&eacute;todos se definen el mismo sitio que las funciones y de la misma manera, asociandolos posteriormente a un objeto ya existente. La sintaxis para definir un m&eacute;todo es la siguiente: objeto.nombremetodo = nombrefuncion y para hacer la llamada al m&eacute;todo esta otra: objeto.nombremetodo(parametro1,parametro2…) </p></td>
  </tr>
  <tr> 
    <td width="70" height="21"> </td>
    <td height="21"> <div align="right"><a href="../index3.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a> </div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
