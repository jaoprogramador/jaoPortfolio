<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Introducci&oacute;n a JQuery</title>
<META http-equiv=Content-Language content=es>
<META content="Programación,Programas,Aplicaciones,Ejercicios, Ejemplos,Tutoriales,Manuales" name=description>
<meta name="keywords" content="Introduccion a JQuery, Manual JQuery, tutorial JQuery, Ejemplos JQuery, ejercicios JQuery">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>

<body>
<table class="tablaContenidos"><tr> 
    <td height="39" colspan="3"> <h2>Ejemplo real de callback con jQuery</h2></td>
  </tr>
  <tr> 
    <td height="268" colspan="3"> <p>Ahora que hemos aprendido toda la teor&iacute;a, 
        veamos un ejemplo pr&aacute;ctico que solucionar&iacute;a el<br>
        problema comentado anteriormente sobre el procesamiento de diversos efectos 
        y cambios en<br>
        las propiedades de los objetos, para que se hagan siempre en la secuencia 
        que deseamos. Se<br>
        trata simplemente de aplicar las llamadas con callback que hemos antes.<br>
        $(&quot;#micapa&quot;).fadeOut(1000, function(){<br>
        $(&quot;#micapa&quot;).css({'top': 300, 'left':200});<br>
        $(&quot;#micapa&quot;).fadeIn(1000);<br>
        });<br>
        Como se puede ver, en la llamada a fadeOut() estamos pasando como par&aacute;metros 
        el valor<br>
        1000, que son los milisegundos tiene que durar el efecto fade out (fundido 
        hacia<br>
        transparente), y luego la funci&oacute;n callback, que se ejecutar&aacute; 
        despu&eacute;s de que fadeOut() haya<br>
        terminado.Como el m&eacute;todo css() (se encuentra como primera instrucci&oacute;n 
        de la funci&oacute;n callback) es<br>
        instant&aacute;neo, no necesita hacerse un callback para ejecutar el fadeIn(), 
        sino que se puede<br>
        escribir directamente en la siguiente l&iacute;nea de c&oacute;digo. As&iacute; 
        pues, se ve que el callback, al menos<br>
        en este ejemplo, s&oacute;lo es necesario hacerlo cuando se ejecutan funciones 
        que realizar&aacute;n un<br>
        procesamiento prolongado.<br>
        Podemos ver este ejemplo de callback en una p&aacute;gina aparte.<br>
        Hasta aqu&iacute;, a lo largo de los cap&iacute;tulos de este manual de 
        jQuery, hemos le&iacute;do la introducci&oacute;n a<br>
        este popular framework Javascript, tal como se puede ver en el apartado 
        &quot;How to use jQuery&quot;<br>
        publicada en la p&aacute;gina de documentaci&oacute;n. </p>
      </td>
  </tr>
  <tr> 
    <td width="66" height="21"></td>
    <td width="324" height="21">&nbsp;</td>
    <td width="149"><div align="right"><a href="../index.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a></div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
