<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Porqu&ccedil;e utilizar POI</title>
<META http-equiv=Content-Language content=es>
<META content="Manual POI, ejemplos POI, documento excel en java" name=description>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="keywords" content="Manual POI, ejemplos POI, documento excel en java">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>

<body>
<table class="tablaContenidos">
  <tr> 
    <td height="39" colspan="3"> <h2>Porqu&eacute; utilizar POI</h2></td>
  </tr>
  <tr> 
    <td height="258" colspan="3"> <p>Un uso importante de la API de Apache POI 
        es para aplicaciones de extracci&oacute;n de texto, tales como ara&ntilde;as 
        web, &iacute;ndice de constructoras, y los sistemas de gesti&oacute;n 
        de contenidos. </p>
      <p>Entonces &iquest;por qu&eacute; deber&iacute;a utilizar POIFS, HSSF o 
        XSSF? </p>
      <p>Tendr&aacute; que utilizar POIFS si tiene un documento escrito en OLE 
        2 Compound Document Format, probablemente escrito utilizando MFC, que 
        usted necesita para leer en Java. Como alternativa, tendr&aacute; que 
        utilizar para escribir POIFS OLE 2 Compound Document Format si necesita 
        para poder operar con software que se ejecuta en la plataforma Windows. 
        No estamos bromeando cuando decimos que POIFS es la aplicaci&oacute;n 
        m&aacute;s completa y correcta de este formato de archivo hasta la fecha! 
      </p>
      <p>Tendr&aacute; que utilizar HSSF si usted necesita para leer o escribir 
        un archivo de Excel utilizando Java (XLS). Tendr&aacute; que utilizar 
        XSSF si usted necesita leer o escribir un archivo de Excel utilizando 
        Java OOXML (xlsx). La interfaz de SS combinada le permite f&aacute;cilmente 
        leer y escribir todo tipo de archivos de Excel (XLS y XLSX) utilizando 
        Java. <br>
      </p></td>
  </tr>
  <tr> 
    <td width="66" height="21"></td>
    <td width="324" height="21">&nbsp;</td>
    <td width="149"><div align="right"><a href="../index.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a></div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
