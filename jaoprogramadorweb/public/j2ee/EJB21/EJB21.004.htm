<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>LIntroducci&amp;oacute;n a EJB 2.1</title>
<META http-equiv=Content-Language content=es>
<META content="Programación en EJB 2.1,Programas EJB 2.1,Aplicaciones en EJB 2.1,Ejercicios en EJB 2.1, Ejemplos de EJB 2.1,Tutorial de EJB 2.1,Manual EJB 2.1" name=description>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="keywords" content="EJB 2.1, Manual EJB 2.1, tutorial EJB 2.1, Ejemplos EJB 2.1, ejercicios EJB 2.1">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>

<body>
<table class="tablaContenidos">

  <tr> 
    <td height="39" colspan="3"> <h2> <strong>Contenedores EJB</strong></h2></td>
  </tr>
  <tr> 
    <td height="258" colspan="3"> <p>Ya hemos dicho que los contenedores son los entornos de ejecución 
    	de los EJB. Pero ofrecen bastante más:
•	Los contenedores ofrecen a los EJB servicios como los de persistencia (pool de conexiones, gestión de
 integridad, incluso evitar la codificación de SQL, etc), manejo de errores, seguridad, transacciones, 
 etc. Una de las características más interesantes es que estos servicios se pueden definir de manera 
 declarativa, por medio de su descriptor de despliegue. La idea es que el programador del EJB no tenga 
 que comprometerse en COMO se consiguen estos servicios, sino sólo en QUE son (y como se declaran).

•	El contenedor se interpone entre el cliente y el EJB, de tal forma que las llamadas al EJB se 
hacen por medio del contenedor. Recordando RMI:

o	El cliente realiza una llamada que se dirige al Stub RMI

o	El stub lee y envía los parámetros hacia la red

o	Un skeleton recibe la llamada y decodifica (un-marshallin) los parámetros para enviarlos al contenedor.

o	El contenedor controla la seguridad, persistencia (por ejemplo, llamando a la base de datos) y el 
manejo de transacciones.

o	El contenedor invoca al EJB.
A partir de la especificación EJB 2.0 la interfaz remota no precisa de stubs y skeletons RMI.

      </p>
      </td>
  </tr>
  <tr> 
    <td width="66" height="21"></td>
    <td width="324" height="21">&nbsp;</td>
    <td width="149"><div align="right"><a href="../index.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a></div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
