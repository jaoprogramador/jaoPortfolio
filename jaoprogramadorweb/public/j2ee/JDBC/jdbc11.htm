<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>CONEXI&Oacute;N</title>
<META http-equiv=Content-Language content=es>
<META content="Programación en JDBC,Programas JDBC,Aplicaciones en JDBC,Ejercicios en JDBC, Ejemplos de JDBC,Tutoriales de JDBC,Manuales JDBC" name=description>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="keywords" content="JDBC, Manual JDBC, tutorial JDBC, Ejemplos JDBC, ejercicios JDBC">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>

<body>
<table class="tablaContenidos">

  <tr> 
    <td height="39" colspan="3"> <h2> CONEXI&Oacute;N</h2></td>
  </tr>
  <tr> 
    <td height="258" colspan="3"> 
      <p>a) Vista Preliminar</p>
      <p>Un objeto Connection representa una conexi&oacute;n con una base de datos. 
        Una sesi&oacute;n de conexi&oacute;n incluye las sentencias SQL que se 
        ejecutan y los resultados que son devueltos despu&eacute;s de la conexi&oacute;n. 
        Una &uacute;nica aplicaci&oacute;n puede tener una o m&aacute;s conexiones 
        con una &uacute;nica base de datos, o puede tener varias conexiones con 
        varias bases de datos diferentes.</p>
      <p>b) Apertura de una conexi&oacute;n</p>
      <p>La forma est&aacute;ndar de establecer una conexi&oacute;n a la base 
        de datos es mediante la llamada al m&eacute;todo DriverManager.getConnection. 
        Este m&eacute;todo toma una cadena que contiene una URL. La clase DriverManager, 
        referida como la capa de gesti&oacute;n JDBC, intenta localizar un driver 
        que pueda conectar con la base de datos representada por la URL. La clase 
        DriverManager mantiene una lista de clases Driver registradas y cuando 
        se llama al m&eacute;todo getConnection, se chequea con cada driver de 
        la lista hasta que encuentra uno que pueda conectar con la base de datos 
        especificada en la URL. El m&eacute;todo connect de Driver usa esta URL 
        para establecer la conexi&oacute;n.</p>
      <p>Un usuario puede evitar la capa de gesti&oacute;n de JDBC y llamar a 
        los m&eacute;todos de Driver directamente. Esto puede ser &uacute;til 
        en el caso raro que dos drivers puedan conectar con la base de datos y 
        el usuario quiera seleccionar uno expl&iacute;citamente. Normalmente, 
        de cualquier modo, es mucho m&aacute;s f&aacute;cil dejar que la clase 
        DriverManager maneje la apertura de la conexi&oacute;n.</p>
      <p>El siguiente c&oacute;digo muestra como ejemplo una conexi&oacute;n a 
        la base de datos localizada en la URL &#8220;jdbc:odbc:wombat&#8221; con 
        un user ID de &#8220;oboy&#8221; y password &#8220;12java&#8221;.</p>
      <p>String url = &quot;jdbc:odbc:wombat&quot;;<br>
        Connection con = DriverManager.getConnection(url, &quot;oboy&quot;, &quot;12Java&quot;);<br>
      </p>
      <p>&nbsp; </p>
      </td>
  </tr>
  <tr> 
    <td width="66" height="21"></td>
    <td width="324" height="21">&nbsp;</td>
    <td width="149"><div align="right"><a href="../index.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a></div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
