<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Indice J2ME</title>
<META http-equiv=Content-Language content=es>
<META content="Manual J2ME, ejemplos J2ME, codigos J2ME" name=description>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="keywords" content="Manual J2ME, ejemplos J2ME, codigos J2ME">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>


<body>
<table class="tablaContenidos">

  <tr> 
    <td height="39" colspan="3"> <h2>Utilizando lo estudiado: RMS, HTTP y MEDIA</h2></td>
  </tr>
  <tr> 
    <td height="258" colspan="3"> <p>Los tres temas anteriores del curso, aunque 
        han sido estudiados desde un punto de vista general, nos ser&aacute;n 
        de gran utilidad a la hora de crear un juego interactivo. Por supuesto, 
        no quedan limitados al uso en juegos, ya vimos que no es as&iacute;, pero 
        sin duda nos aportar&aacute;n una funcionalidad extra totalmente deseable.<br>
        Algunos aspectos tratados en los temas anteriores que aprovecharemos para 
        el desarrollo de juegos son detallados a continuaci&oacute;n:<br>
        - RMS. La capacidad de almacenamiento persistente de nuestros dispositivos 
        MIDP puede ser aprovechada en juegos de m&uacute;ltiples formas. Con el 
        RMS, por ejemplo, podremos:<br>
        &#8226; Almacenar el estado en el que queda un juego al abandonarlo para 
        volver m&aacute;s tarde a la misma situaci&oacute;n en que nos quedamos 
        (t&iacute;pica acci&oacute;n &quot;guardar la partida&quot;).<br>
        &#8226; Almacenar puntuaciones m&aacute;ximas en nuestro juego, para as&iacute; 
        compararnos a otros usuarios que jueguen en nuestro dispositivo.<br>
        &#8226; Guardar datos que deseemos evitar trasladar en el JAR. Accediendo 
        por HTTP a un servidor nos los podemos traer para disponer de ellos una 
        vez almacenados en el dispositivo. As&iacute;, con una sola conexi&oacute;n 
        traer&iacute;amos esa informaci&oacute;n para las futuras ejecuciones 
        del juego. HTTP nos servir&aacute; para eso y mucho m&aacute;s.<br>
        - HTTP. La idea de tener un sistema externo a nuestro servicio, al cual 
        poder conectar para recabar informaci&oacute;n y atacar l&oacute;gica 
        m&aacute;s compleja (siempre bajo el coste de tiempo y monetario que conlleva) 
        hace volar nuestra imaginaci&oacute;n.<br>
        Podr&iacute;amos acceder al servidor para obtener recursos pesados como 
        v&iacute;deos de puesta en escena, puntuaciones m&aacute;ximas de todo 
        usuario dado de alta en el juego. No obstante, esto no es todo, se abren 
        las puertas a juegos online donde cada cierto tiempo accedamos al servidor 
        para traernos las acciones ejecutadas por otros usuarios y que &eacute;stas 
        var&iacute;en nuestra situaci&oacute;n actual en el juego. As&iacute;, 
        por ejemplo, podemos observar c&oacute;mo afectar&aacute; esto a juegos 
        de estrategia o rol, interviniendo en la misma historia m&uacute;ltiples 
        usuarios, afect&aacute;ndose unos a otros.<br>
        - MEDIA. El tema 3 ser&aacute;, como ya adelantamos, un elemento casi 
        imprescindible en el desarrollo de juegos en J2ME. Todo lo visto en multimedia 
        (sonidos, m&uacute;sica y animaciones) nos ayudar&aacute; aqu&iacute;, 
        de la forma que ya hemos repetido anteriormente, a comunicarnos con el 
        usuario de una forma m&aacute;s potente.<br>
        Aunque no se vio en el tema anterior por no pertenecer directamente a 
        la API multimedia, relacionado en cierta forma con la salida que suponen 
        los elementos multimedia, tenemos disponible en el paquete javax.microeduition.lcdui 
        un elemento muy &uacute;til en el desarrollo de juegos: la vibraci&oacute;n 
        del dispositivo por medio del m&eacute;todo Display.vibrate(int duration). 
        Con ella podremos alertar al usuario de ciertas acciones puntuales que 
        le ocurran a su avatar. </p>
      </td>
  </tr>
  <tr> 
    <td width="66" height="21"></td>
    <td width="324" height="21">&nbsp;</td>
    <td width="149"><div align="right"><a href="../index.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a></div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
