<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Ejercicios Oracle</title>
<META http-equiv=Content-Language content=es>
<META content="Programación,Programas,Aplicaciones,Ejercicios, Ejemplos,Tutoriales,Manuales" name=description>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<meta name="keywords" content="Disparadores, triggers, Oracle, sql, pl/sql, programacion oracle, ejercicios, ejemplos">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>

<body>
<table class="tablaContenidos">
  <tr> 
    <td height="39" colspan="3"> <h2>E 
        J E R C I C I O S</h2></td>
  </tr>
  <tr> 
    <td> <h3>CREATE 
        OR REPLACE TRIGGER...</h3><p>
        1.- Ejemplo de como crear un trigger.</p>
        <p>a) Construir un disparador de base de datos que permita auditar las operaciones de inserci&oacute;n o borrado de datos que se realicen en la tabla emple seg&uacute;n las siguientes especificaciones:<br>
          - En primer lugar se crear&aacute; desde SQL*Plus la tabla auditaremple con la columna col1 VARCHAR2(200).<br>
          - Cuando se produzca cualquier manipulaci&oacute;n se insertar&aacute; una fila en dicha tabla que contendr&aacute;: <br>
          - Fecha y hora<br>
          - N&uacute;mero de empleado<br>
          - Apellido<br>
          - La operaci&oacute;n de actualizaci&oacute;n INSERCI&Oacute;N o BORRADO<br>
        </p>
        <p>CREATE TABLE auditaremple (<br>
  col1 VARCHAR2(200)<br>
  );</p>
        <p>CREATE OR REPLACE TRIGGER auditar_act_emp<br>
  BEFORE INSERT OR DELETE<br>
  ON EMPLE<br>
  FOR EACH ROW<br>
  BEGIN<br>
  IF DELETING THEN<br>
  INSERT INTO AUDITAREMPLE<br>
  VALUES(TO_CHAR(sysdate,'DD/MM/YY*HH24:MI*') <br>
  || :OLD.EMP_NO|| '*' || :OLD.APELLIDO || '* BORRADO ');<br>
  ELSIF INSERTING THEN<br>
  INSERT INTO AUDITAREMPLE<br>
  VALUES(TO_CHAR(sysdate,'DD/MM/YY*HH24:MI*') <br>
  || :NEW.EMP_NO || '*' || :NEW.APELLIDO||'* INSERCION ');<br>
  END IF;<br>
  END;</p></td>
    <td>&nbsp;</td>
    <td><a href="http://www.euskalnet.net/juanarana/oraclezip/Ejer41.rar"><img src="../../imagenes/Descarga.gif" width="16" height="16" border="0"></a></td>
  </tr>
  <tr> 
    <td><h3>CREATE 
      OR REPLACE TRIGGER....</h3>
    <p>
      b)Ejemplo de como crear un trigger cuando actualizamos en la tabla datos.</p>
      <p>2.- Escribir un trigger de base de datos un que permita auditar las modificaciones en la tabla empleados insertado en la tabla auditaremple los siguientes datos: <br>
        - Fecha y hora<br>
        - N&uacute;mero de empleado<br>
        - Apellido<br>
        - La operaci&oacute;n de actualizaci&oacute;n: MODIFICACI&Oacute;N.<br>
      - El valor anterior y el valor nuevo de cada columna modificada. (solo las columnas modificadas)</p>
      <p>CREATE OR REPLACE TRIGGER audit_modif<br>
  BEFORE UPDATE ON EMPLE<br>
  FOR EACH ROW <br>
  DECLARE<br>
  v_cad_inser auditaremple.col1%TYPE;<br>
  BEGIN<br>
  v_cad_inser := TO_CHAR(sysdate,'DD/MM/YY*HH24:MI*') ||:OLD.EMP_NO ||'* MODIFICACION *';</p>
      <p> IF UPDATING ('EMP_NO') THEN <br>
  v_cad_inser := v_cad_inser <br>
  ||:OLD.EMP_NO|| '*'|| :NEW.EMP_NO;<br>
  END IF;</p>
      <p> IF UPDATING ('APELLIDO') THEN <br>
  v_cad_inser := v_cad_inser <br>
  ||:OLD.APELLIDO|| '*'||:NEW.APELLIDO;<br>
  END IF;</p>
      <p> IF UPDATING ('OFICIO') THEN <br>
  v_cad_inser := v_cad_inser<br>
  ||:OLD.OFICIO|| '*'||:NEW.OFICIO;<br>
  END IF;</p>
      <p> IF UPDATING ('DIR') THEN <br>
        v_cad_inser := v_cad_inser<br>
        ||:OLD.DIR|| '*'||:NEW.DIR;<br>
  END IF;</p>
      <p> IF UPDATING ('FECHA_ALT') THEN <br>
  v_cad_inser := v_cad_inser<br>
  ||:OLD.FECHA_ALT||:NEW.FECHA_ALT;<br>
  END IF;</p>
      <p> IF UPDATING ('SALARIO') THEN <br>
  v_cad_inser := v_cad_inser<br>
  ||:OLD.SALARIO|| '*'||:NEW.SALARIO;<br>
  END IF;</p>
      <p> IF UPDATING ('COMISION') THEN <br>
  v_cad_inser := v_cad_inser<br>
  ||:OLD.COMISION|| '*'||:NEW.COMISION;<br>
  END IF;</p>
      <p> IF UPDATING ('DEPT_NO') THEN <br>
  v_cad_inser := v_cad_inser<br>
  ||:OLD.DEPT_NO|| '*'||:NEW.DEPT_NO;<br>
  END IF;<br>
  <br>
  INSERT INTO AUDITAREMPLE VALUES(v_cad_inser);<br>
  END;</p>
      <p>3.- Escribir un disparador de base de datos que haga fallar cualquier operaci&oacute;n de modificaci&oacute;n del apellido o del n&uacute;mero de un empleado, o que suponga una subida de sueldo superior al 10%.</p>
      <p>CREATE OR REPLACE TRIGGER fallo_modif<br>
  BEFORE UPDATE OF apellido, emp_no, salario<br>
  ON emple<br>
  FOR EACH ROW<br>
  BEGIN<br>
  IF UPDATING('emp_no') OR UPDATING('apellido') <br>
  OR (UPDATING ('salario') AND<br>
  :new.salario&gt;:old.salario*1.1)<br>
  THEN<br>
  RAISE_APPLICATION_ERROR<br>
  (-20001,'Err. Modificacion no permitida');<br>
  END IF;<br>
  END;</p></td>
    <td>&nbsp;</td>
    <td><a href="http://www.euskalnet.net/juanarana/oraclezip/Ejer42.rar"><img src="../../imagenes/Descarga.gif" width="16" height="16" border="0"></a></td>
  </tr>
  <tr> 
    <td><h3> CREATE OR REPLACE TRIGGER...</h3>
    <p>
      c) Ejemplos como crear un trigger a partir de 
      una vista.</p>
    <p>4.- Suponiendo que disponemos de la vista</p>
    <p>CREATE VIEW DEPARTAM AS<br>
      SELECT DEPART.DEPT_NO, DNOMBRE, LOC, COUNT(EMP_NO) TOT_EMPLE <br>
      FROM EMPLE, DEPART<br>
      WHERE EMPLE.DEPT_NO (+) = DEPART.DEPT_NO<br>
      GROUP BY DEPART.DEPT_NO, DNOMBRE, LOC;</p>
    <p>Construir un disparador que permita realizar operaciones de actualizaci&oacute;n en la tabla depart a partir de la vista dptos, de forma similar al ejemplo del trigger t_ges_emplead. Se contemplar&aacute;n las siguientes operaciones:<br>
      - Insertar departamento.<br>
      - Borrar departamento.<br>
      - Modificar la localidad de un departamento.</p>
    <p>CREATE OR REPLACE TRIGGER ges_depart<br>
  INSTEAD OF DELETE OR INSERT OR UPDATE<br>
  ON DEPARTAM<br>
  FOR EACH ROW<br>
  BEGIN<br>
  IF DELETING THEN<br>
  DELETE FROM depart WHERE dept_no = :old.dept_no;<br>
  ELSIF INSERTING THEN<br>
  INSERT INTO depart <br>
  VALUES(:new.dept_no, :new.dnombre, :new.loc);<br>
  ELSIF UPDATING('loc') THEN<br>
  UPDATE depart SET loc = :new.loc<br>
  WHERE dept_no = :old.dept_no;<br>
  ELSE<br>
  RAISE_APPLICATION_ERROR<br>
  (-20001,'Error en la actualizaci&oacute;n');<br>
  END IF;<br>
  END;</p>
    <p></p></td>
    <td>&nbsp;</td>
    <td><a href="http://www.euskalnet.net/juanarana/oraclezip/Ejer43.rar"><img src="../../imagenes/Descarga.gif" width="16" height="16" border="0"></a></td>
  </tr>
  <tr> 
    <td><div align="right"><a href="http://www.euskalnet.net/juanarana/index3.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a>
      </div>
      </td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
