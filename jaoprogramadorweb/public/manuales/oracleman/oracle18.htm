<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Grupos  de subconsultas Oracle</title>
<META http-equiv=Content-Language content=es>
<META content="Programación,Programas,Aplicaciones,Ejercicios, Ejemplos,Tutoriales,Manuales" name=description>
<meta name="keywords" content="Manual Oracle, Tutorial Oracle, Manual SQL, Tutorial SQL, Ejercicios Oracle">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>

<body>
<table class="tablaContenidos">
  <tr> 
    <td height="39" colspan="2"> <h2>Grupos 
        de subconsultas</h2></td>
  </tr>
  <tr> 
    <td height="197" colspan="2"><p>Hasta el momento estudiamos por separado un 
        conjunto de herramientas de SQL, viendo en cada caso sus posibilidades. 
        Ahora pasaremos a ver la combinaci&oacute;n de grupos y subconsultas, 
        lo que multiplicar las posibilidades de SQL en cuanto al rendimiento en 
        el dise&ntilde;o de consultas complejas se refiere, las cuales se pueden 
        realizar en forma sencilla y con pocas l&iacute;neas de c&oacute;digo.</p>
      <p>Para combinar grupos de con subconsulta debemos incluir en la sentencia 
        SELECT la orden HAVING. que tiene las siguientes caracter&iacute;sticas:</p>
      <p>
      <blockquote>1.- Funciona como la orden WHERE, pero sobre los resultados 
        de las funciones de grupo , en oposici&oacute;n a las columnas o funciones 
        para registros individuales que se seleccionan mediante la orden WHERE. 
        Es decir, trabaja como si fuera una orden WHERE, pero sobre grupos de 
        registros.
        2.- Se ubica despu&eacute;s de la orden GROUP BY. 
        3.-Puede usar una funci&oacute;n de grupo diferente a la orden SELECT.</blockquote>
      <p>&nbsp;</p>
      El ejemplo a dise&ntilde;ar para nuestra aplicaci&oacute;n es una consulta 
      &iquest;c&uacute;al fue el art&iacute;culo m&aacute;s vendido y en qu&eacute; 
      cantidad?. En este caso, la orden HAVING de la consulta principal selecciona 
      aquellos art&iacute;culos (GROUP BY) que tienen una venta total (SUM(valor)) 
      igual a la mayor venta realizada por art&iacute;culo (MAX(SUM(valor))) que 
      devuelve la subconsulta.</p> 
      <p>SELECT articulo &quot;Articulo mas vendido&quot;, 
        SUM(valor) &quot;Venta&quot; 
        FROM ventas 
        GROUP BY articulo 
        HAVING SUM(valor)=(
        SELECT MAX(SUM(valor)) 
        FROM ventas 
        GROUP BY articulo
        );</p></td>
  </tr>
  <tr> 
    <td width="70" height="21"></td>
    <td height="21"> <div align="right"><a href="../index.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a></div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
