<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<title>Procedimientos</title>
<META http-equiv=Content-Language content=es>
<META content="Programación,Programas,Aplicaciones,Ejercicios, Ejemplos,Tutoriales,Manuales" name=description>
<meta name="keywords" content="Procedimientos, Manual Visual Basic,Tutorial Visual Basic, Ejemplos Visual Basic">
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
<META content=euskalnet.net/jaoprogramador name=author>
<META content="Copyright (c) 2005 jaoprogramador" name=copyright>
<META scheme=RFC1766 content=español name=DC.Language>
<META content=es,sp,spanish,español name=lang>
<META content=all name=robots>
<link href="../../styles/estilos.css" rel="stylesheet" type="text/css">
</head>


<body>
<table class="tablaContenidos">
  <tr> 
    <td height="39" colspan="2"> <h2>Procedimientos 
        definidos por el usuario</h2></td>
  </tr>
  <tr> 
    <td height="144" colspan="2">
<table width="75%" >
        <tr> 
          <td><h3>Contenido</h3></td>
          <td>&nbsp;</td>
        </tr>
        <tr> 
          <td>&nbsp;</td>
          <td><a href="vb10.htm#intro">- Introducci&oacute;n</a></td>
        </tr>
        <tr> 
          <td>&nbsp;</td>
          <td><a href="vb10.htm#ambito">- &Aacute;mbito de un procedimiento</a></td>
        </tr>
        <tr> 
          <td>&nbsp;</td>
          <td ><a href="vb10.htm#crear">- Crear un procedimiento 
            general</a></td>
        </tr>
        <tr> 
          <td>&nbsp;</td>
          <td ><a href="vb10.htm#declarar">- Declarar un procedimiento 
            privado</a></td>
        </tr>
      </table>
      <h3>Introducci&oacute;n<a name="intro"></a></h3>
        <p>
        Seg&uacute;n lo que hemos visto hasta ahora, Visual Basic, almacena el 
        c&oacute;digo en m&oacute;dulos. Hay tres clases de m&oacute;dulos: Formularios 
        (.frm), m&oacute;dulos est&aacute;ndar (.bas) y clases (.cls), de los 
        cuales, nosotros hemos venido utilizando los dos primeros; el tercero 
        queda para aplicaciones m&aacute;s avanzadas. Cada m&oacute;dulo puede 
        contener fundamentalmente:<br>
        <br>
        &nbsp;&nbsp;&nbsp;&nbsp;- Declaraciones (constantes, tipos, variables, 
        etc.).<br>
        &nbsp;&nbsp;&nbsp;&nbsp;- Procedimientos conducidos por eventos.<br>
        &nbsp;&nbsp;&nbsp;&nbsp;- Procedimientos est&aacute;ndar.<br>
        <br>
        La base de una aplicaci&oacute;n en Visual Basicla forman sus procedimientos 
        conducidos por eventos. Un procedimiento conducido por un evento es el 
        c&oacute;digo que se envoca cuando un objeto reconoce que ha ocurrido 
        un determinado evento.<br>
        <br>
        Cuando varios procedimientos conducidos por eventos necesiten ejecutar 
        un mismo proceso, o ejemplo visualizar un diagrama de barras,a mejor forma 
        de proceder es colocar el c&oacute;digo com&uacute;n en un procedimiento 
        general, perteneciente a un m&oacute;dulo est&aacute;ndar, para que pueda 
        invocarse, desde cada procedimiento que lo necesite. De esta forma se 
        elimina la necesidad de duplicar c&oacute;digo. Un procedimiento se invoca 
        haciendo una llamada explicita al mismo.<br>
        <br>
        Un procedimiento general puede escribirse como procedimiento Sub o como 
        funci&oacute;n Function.. En cambio, un procedimiento conducido por un 
        evento siempre es un procedimiento Sub. El nombre de un procedimiento 
        general lo elige el usuario, y el nombre de un procedimiento conducido 
        por eventos lo forma Visual Basic concatenando el nombre del objeto (Fono 
        o nombre del control)y el nombre del evento ; esto es, objeto_evento. 
        Aparte de estas diferencias y c&oacute;mo y cuando son invocadas, los 
        procedimientos generales y los conducidos por por eventos de implementas 
        y se ejecutan exactamente igual.<br>
        <br>
        </p>
        <h3>&Aacute;mbito de un procedimiento<a name="ambito"></a></h3>
        <p>
        
        Cuando un procedimiento no se califica explicitamente con las palabras 
        reservadas Public o o Private es, por omisi&oacute;n, p&uacute;blico en 
        todos los m&oacute;dulos. Logicamente el car&aacute;cter p&uacute;blico 
        de un procedimiento puede ser cambiado a privado, modificando as&iacute; 
        su accesibilidad. Por ejemplo, el siguiente procedimiento escrito en cualquier 
        m&oacute;dulo es p&uacute;blico:</p>
        <br>
        Sub MiProc()<p>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'Declaraciones y sentencias<br>
        End Sub<br>
        </p><p>
        Consecuentemente, un procedimiento p&uacute;blico (Public) puede ser invocado 
        desde cualquier parte de la aplicaci&oacute;n, pero un procedimiento privado 
        (Private) s&oacute;lo puede ser llamado desde los procedimientos que est&eacute;n 
        en el mismo m&oacute;dulo.</p>
        <p>
        Cuando un procedimiento es llamado para su ejecuci&oacute;n, Visual Basic 
        busca ese procedimiento en el m&oacute;dulo donde nos encontramos. Si 
        no lo encuentra, entonces contin&uacute;a la b&uacute;squeda en el resto 
        de m&oacute;dulos de la aplicaci&oacute;n.</p>
        
        
        <h3>Crear un procedimiento general<a name="crear"></a></h3>
        <p>
        Para crear un procedimiento general, primero dirijase a la ventana del 
        proyecto, elija el m&oacute;dulo donde quiere definir el procedimiento 
        y abra la ventana de c&oacute;digo correspondiente haciendo click en en 
        bot&oacute;n ver c&oacute;digo. A continuaci&oacute;n ejecute la orden 
        la orden Agregar procedimiento.. del men&uacute; herramientas. Tambi&eacute;n, 
        puede escribir Sub o Function seguido del nombre del procedimiento directamente 
        sobre la ventana de c&oacute;digo; en este &uacute;ltimo caso, al pulsar 
        la tecla entrar Visual Basic completar&aacute; el esqueleto del procedimiento.</p>
        <h3>
        Declarar un procedimiento privado<a name="declarar"></a></h3>
        <p>
        Para hacer que un procedimiento (Sub o Function)s&oacute;lo sea accesible 
        desde los procedimientos del m&oacute;dulo al cual pertenece, hay que 
        colocar al principio de la cabecera del procedimiento la palabra clave 
        Private. Por ejemplo:</p><p>
        <br>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Private Sub Proc_1(X as Double, N as Integer)<br>
        <br>
        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;End Sub<br>
        <br>
        Si no se especifica la palabra clave Private se supone que el procedimiento 
        es public, lo que significa que puede ser invocado desde otros m&oacute;dulos.<br>
      </p></td>
  </tr>
  <tr> 
    <td></td>
    <td> <div align="right"><a href="../index.htm" target="_parent">&lt;&lt;Men&uacute; 
        Inicio</a></div></td>
  </tr>
</table>
<p>&nbsp;</p>
</body>
</html>
