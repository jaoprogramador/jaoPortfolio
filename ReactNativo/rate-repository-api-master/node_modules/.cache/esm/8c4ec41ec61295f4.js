let gql,merge,Repository,repositoryQuery,User,createUserMutation,authenticateMutation,usersQuery,meQuery,repositoriesQuery,PageInfo,RepositoryConnection,OrderDirection,createReviewMutation,Review,ReviewConnection,UserConnection,deleteReviewMutation,DateTime;_c61‍.x([["typeDefs",()=>typeDefs],["resolvers",()=>resolvers]]);_c61‍.w("apollo-server",[["gql",["gql"],function(v){gql=v}]]);_c61‍.w("lodash",[["merge",["merge"],function(v){merge=v}]]);_c61‍.w("./types/Repository",[["default",["Repository"],function(v){Repository=v}]]);_c61‍.w("./queries/repository",[["default",["repositoryQuery"],function(v){repositoryQuery=v}]]);_c61‍.w("./types/User",[["default",["User"],function(v){User=v}]]);_c61‍.w("./mutations/createUser",[["default",["createUserMutation"],function(v){createUserMutation=v}]]);_c61‍.w("./mutations/authenticate",[["default",["authenticateMutation"],function(v){authenticateMutation=v}]]);_c61‍.w("./queries/users",[["default",["usersQuery"],function(v){usersQuery=v}]]);_c61‍.w("./queries/me",[["default",["meQuery"],function(v){meQuery=v}]]);_c61‍.w("./queries/repositories",[["default",["repositoriesQuery"],function(v){repositoriesQuery=v}]]);_c61‍.w("./types/PageInfo",[["default",["PageInfo"],function(v){PageInfo=v}]]);_c61‍.w("./types/RepositoryConnection",[["default",["RepositoryConnection"],function(v){RepositoryConnection=v}]]);_c61‍.w("./enums/OrderDirection",[["default",["OrderDirection"],function(v){OrderDirection=v}]]);_c61‍.w("./mutations/createReview",[["default",["createReviewMutation"],function(v){createReviewMutation=v}]]);_c61‍.w("./types/Review",[["default",["Review"],function(v){Review=v}]]);_c61‍.w("./types/ReviewConnection",[["default",["ReviewConnection"],function(v){ReviewConnection=v}]]);_c61‍.w("./types/UserConnection",[["default",["UserConnection"],function(v){UserConnection=v}]]);_c61‍.w("./mutations/deleteReview",[["default",["deleteReviewMutation"],function(v){deleteReviewMutation=v}]]);_c61‍.w("./scalars/DateTime",[["default",["DateTime"],function(v){DateTime=v}]]);




















const rootTypeDefs = gql`
  type Query {
    root: String
  }

  type Mutation {
    root: String
  }
`;

       const typeDefs = [
  rootTypeDefs,
  DateTime.typeDefs,
  Repository.typeDefs,
  repositoryQuery.typeDefs,
  User.typeDefs,
  createUserMutation.typeDefs,
  authenticateMutation.typeDefs,
  usersQuery.typeDefs,
  meQuery.typeDefs,
  repositoriesQuery.typeDefs,
  PageInfo.typeDefs,
  RepositoryConnection.typeDefs,
  OrderDirection.typeDefs,
  createReviewMutation.typeDefs,
  Review.typeDefs,
  ReviewConnection.typeDefs,
  UserConnection.typeDefs,
  deleteReviewMutation.typeDefs,
];

       const resolvers = merge(
  DateTime.resolvers,
  Repository.resolvers,
  repositoryQuery.resolvers,
  User.resolvers,
  createUserMutation.resolvers,
  authenticateMutation.resolvers,
  usersQuery.resolvers,
  meQuery.resolvers,
  repositoriesQuery.resolvers,
  PageInfo.resolvers,
  RepositoryConnection.resolvers,
  OrderDirection.resolvers,
  createReviewMutation.resolvers,
  Review.resolvers,
  ReviewConnection.resolvers,
  UserConnection.resolvers,
  deleteReviewMutation.resolvers,
);
