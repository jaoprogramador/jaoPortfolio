[{"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\blog\\edit.js":"1","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\blog\\index.js":"2","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\portfolio.js":"3","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\postDetail.js":"4","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\posts.js":"5","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\blog\\index.js":"6","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\blog\\[slug].js":"7","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\edit.js":"8","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\frameworks\\index.js":"9","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\frameworks\\[slug].js":"10","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\index.js":"11","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\resume.js":"12","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\_app.js":"13","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\BlogEditor\\index.js":"14","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Button\\index.js":"15","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ContentSection\\index.js":"16","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Cursor\\index.js":"17","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Footer\\index.js":"18","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\FrameworkListCards\\AppCard.js":"19","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\FrameworkListCards\\AppTable.js":"20","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Header\\index.js":"21","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ProjectResume\\index.js":"22","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ResumeDownload\\index.js":"23","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\SelectLanguaje\\index.js":"24","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\SelectLanguaje\\indexBanderas.js":"25","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ServiceCard\\index.js":"26","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Socials\\index.js":"27","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\WorkCard\\index.js":"28"},{"size":784,"mtime":1736332259735,"results":"29","hashOfConfig":"30"},{"size":1266,"mtime":1736332259782,"results":"31","hashOfConfig":"30"},{"size":512,"mtime":1736332259689,"results":"32","hashOfConfig":"30"},{"size":1104,"mtime":1738854198465,"results":"33","hashOfConfig":"30"},{"size":560,"mtime":1739361129150,"results":"34","hashOfConfig":"30"},{"size":5401,"mtime":1739612932638,"results":"35","hashOfConfig":"30"},{"size":4498,"mtime":1739611848653,"results":"36","hashOfConfig":"30"},{"size":33167,"mtime":1736332259548,"results":"37","hashOfConfig":"30"},{"size":2523,"mtime":1738782099214,"results":"38","hashOfConfig":"30"},{"size":2994,"mtime":1738782977507,"results":"39","hashOfConfig":"30"},{"size":5921,"mtime":1739609769820,"results":"40","hashOfConfig":"30"},{"size":7450,"mtime":1739610709623,"results":"41","hashOfConfig":"30"},{"size":486,"mtime":1738574697374,"results":"42","hashOfConfig":"30"},{"size":5881,"mtime":1736332258939,"results":"43","hashOfConfig":"30"},{"size":1204,"mtime":1738682719546,"results":"44","hashOfConfig":"30"},{"size":939,"mtime":1738857715614,"results":"45","hashOfConfig":"30"},{"size":905,"mtime":1736332259095,"results":"46","hashOfConfig":"30"},{"size":1402,"mtime":1738660025848,"results":"47","hashOfConfig":"30"},{"size":1045,"mtime":1736428648823,"results":"48","hashOfConfig":"30"},{"size":2446,"mtime":1739611148319,"results":"49","hashOfConfig":"30"},{"size":16574,"mtime":1739463970369,"results":"50","hashOfConfig":"30"},{"size":846,"mtime":1736435065537,"results":"51","hashOfConfig":"30"},{"size":2603,"mtime":1738764763309,"results":"52","hashOfConfig":"30"},{"size":776,"mtime":1738747100572,"results":"53","hashOfConfig":"30"},{"size":1886,"mtime":1738746814684,"results":"54","hashOfConfig":"30"},{"size":971,"mtime":1736332259267,"results":"55","hashOfConfig":"30"},{"size":448,"mtime":1736332259314,"results":"56","hashOfConfig":"30"},{"size":814,"mtime":1736332259360,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kzyhca",{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","suppressedMessages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\blog\\edit.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\blog\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\portfolio.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\postDetail.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\api\\posts.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\blog\\index.js",["150"],[],"import Head from \"next/head\";\nimport Router, { useRouter } from \"next/router\";\nimport { useEffect, useRef, useState ,useContext} from \"react\";\nimport { stagger } from \"../../animations\";\nimport Button from \"../../components/Button\";\nimport Cursor from \"../../components/Cursor\";\nimport Header from \"../../components/Header\";\nimport data from \"../../data/portfolio.json\";\nimport { ISOToDate, useIsomorphicLayoutEffect } from \"../../utils\";\nimport { getAllPosts } from \"../../utils/api\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\n\n//const Blog = ({ posts }) => {\n  const Blog = ({ initialPosts }) => {\n  const showBlog = useRef(data.showBlog);\n  const text = useRef();\n  const router = useRouter();\n  const [mounted, setMounted] = useState(false);\n  // Contexto de idioma\n  const { language } = useContext(LanguageContext);\n  const [posts, setPosts] = useState(initialPosts);\n  \n  useIsomorphicLayoutEffect(() => {\n    stagger(\n      [text.current],\n      { y: 40, x: -10, transform: \"scale(0.95) skew(10deg)\" },\n      { y: 0, x: 0, transform: \"scale(1)\" }\n    );\n    if (showBlog.current) stagger([text.current], { y: 30 }, { y: 0 });\n    else router.push(\"/\");\n  }, []);\n\n  useEffect(() => {\n    setMounted(true);\n    /* console.log(\"blog.index.js --posts\", posts);\n    console.log(\"blog.index.js --language\", language);\n    console.log(\"blog.index.js --showBlog.current\", showBlog.current); */\n    console.log(\"blog.index.js --data.showCursor\", data.showCursor); \n    console.log(\"blog.index.js --data.showCursor\", data); \n    const fetchPosts = async () => {\n      try {\n        const res = await fetch(`/api/posts?lang=${language}`);\n        if (!res.ok) {\n          throw new Error(`Error ${res.status}: ${await res.text()}`);\n        }\n        const data = await res.json();\n        console.log(\"blog.index.js --data\", data);\n        setPosts(data);\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n  \n    fetchPosts(); \n  \n  }, [language]);\n\n\n  return (\n\n    showBlog.current && (\n      <>\n        {data.showCursor && <Cursor />}\n        <Head>\n          <title>Blog</title>\n        </Head>\n        <div\n          className={`container mx-auto mb-10 ${\n            data.showCursor && \"cursor-none\"\n          }`}\n        >\n          <Header isBlog={true}></Header>\n          <div className=\"mt-10\">\n            <h1\n              ref={text}\n              className=\"mx-auto mob:p-2 text-bold text-6xl laptop:text-8xl w-full\"\n            >\n              Blog.\n            </h1>\n            <div className=\"mt-10 grid grid-cols-1 mob:grid-cols-1 tablet:grid-cols-2 laptop:grid-cols-3 justify-between gap-10\">\n              {posts &&\n                posts.map((post) => (\n                  <div\n                    className=\"cursor-pointer relative\"\n                    key={post.slug}\n                    onClick={() => Router.push(`/blog/${post.slug}`)}\n                  >\n                    <img\n                      className=\"w-full h-60 rounded-lg shadow-lg object-cover\"\n                      src={post.image}\n                      alt={post.title}\n                    ></img>\n                    <h2 className=\"mt-5 text-4xl\">{post.title}</h2>\n                    <p className=\"mt-2 opacity-50 text-lg\">{post.preview}</p>\n                    <span className=\"text-sm mt-5 opacity-25\">\n                      {ISOToDate(post.date)}\n                    </span>\n                    {process.env.NODE_ENV === \"development\" && mounted && (\n                      <div className=\"absolute top-0 right-0\">\n                        <Button\n                          onClick={(e) => {\n                            deleteBlog(post.slug);\n                            e.stopPropagation();\n                          }}\n                          type={\"primary\"}\n                        >\n                          Delete\n                        </Button>\n                      </div>\n                    )}\n                  </div>\n                ))}\n            </div>\n          </div>\n        </div>\n        {process.env.NODE_ENV === \"development\" && mounted && (\n          <div className=\"fixed bottom-6 right-6\">\n            <Button onClick={createBlog} type={\"primary\"}>\n              Add New Post +{\" \"}\n            </Button>\n          </div>\n        )}\n      </>\n    )\n  );\n};\n\n\n  \n  export async function getStaticProps(context) {\n    const language = context.locale || \"eu\";\n    console.log(\"🛠️ getStaticProps - Fetching posts for language:\", language);\n    \n    const posts = getAllPosts(language, [ \n      \"slug\",\n      \"title\",\n      \"image\",\n      \"preview\",\n      \"author\",\n      \"date\",]);\n    return { props: { initialPosts: posts } };\n  } \n    /*export async function getStaticProps({ locale }) {\n      const language = locale || \"en\"; // Idioma por defecto\n      console.log(\"🛠️ getStaticProps - Fetching posts for language:\", language);\n    \n      const posts = getAllPosts(language, [\"slug\", \"title\", \"image\", \"preview\", \"author\", \"date\"]);\n    \n      return {\n        props: { posts },\n      };\n    }\n     export async function getStaticPaths() {\n      return {\n        paths: [\n          { params: {}, locale: \"en\" }, // Inglés\n          { params: {}, locale: \"es\" }, // Español\n          { params: {}, locale: \"eu\" },\n        ],\n        fallback: false,\n      };\n    } */\n    \n  \nexport default Blog;\n","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\blog\\[slug].js",["151"],[],"import React, { useRef, useState, useContext,useEffect } from \"react\";\nimport { getPostBySlug, getAllPosts } from \"../../utils/api\";\nimport Header from \"../../components/Header\";\nimport ContentSection from \"../../components/ContentSection\";\nimport Footer from \"../../components/Footer\";\nimport Head from \"next/head\";\nimport { useIsomorphicLayoutEffect } from \"../../utils\";\nimport { stagger } from \"../../animations\";\nimport Button from \"../../components/Button\";\nimport BlogEditor from \"../../components/BlogEditor\";\nimport { useRouter } from \"next/router\";\nimport Cursor from \"../../components/Cursor\";\nimport data from \"../../data/portfolio.json\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nconst BlogPost = ({ post }) => {\n  // Contexto de idioma\n  const { language } = useContext(LanguageContext);\n  const [posts, setPosts] = useState(post);\n  \n  const [showEditor, setShowEditor] = useState(false);\n  const textOne = useRef();\n  const textTwo = useRef();\n  const router = useRouter();\n\n  useIsomorphicLayoutEffect(() => {\n    stagger([textOne.current, textTwo.current], { y: 30 }, { y: 0 });\n  }, []);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        console.log(\"🔍 Solicitando post en idioma:\", language);\n  \n        const res = await fetch(`/api/postDetail?lang=${language}&slug=${router.query.slug}`);\n        const data = await res.json();\n  \n        console.log(\"📥 Respuesta de la API:\", data);\n        console.log(\"📥 Respuesta de la API content:\", data.content);\n  \n        // 🔥 FORZAR RE-RENDER: Evitar que React ignore la actualización si el objeto es idéntico\n        setPosts((prevPosts) => JSON.stringify(prevPosts) !== JSON.stringify(data) ? data : { ...data });\n      } catch (error) {\n        console.error(\"Error fetching posts:\", error);\n      }\n    };\n  \n    fetchPosts();\n  }, [language, router.query.slug]); // Asegúrate de que el efecto depende del slug también\n\n  \n\n  return (\n    <>\n      <Head>\n        <title>{\"Blog - \" + posts.title}</title>\n        <meta name=\"description\" content={posts.preview} />\n      </Head>\n      {data.showCursor && <Cursor />}\n\n      <div\n        className={`container mx-auto mt-10 ${\n          data.showCursor && \"cursor-none\"\n        }`}\n      >\n        <Header isBlog={true} />\n        <div className=\"mt-10 flex flex-col\">\n          <img\n            className=\"w-full h-96 rounded-lg shadow-lg object-cover\"\n            src={post.image}\n            alt={posts.title}\n          ></img>\n          <h1\n            ref={textOne}\n            className=\"mt-10 text-4xl mob:text-2xl laptop:text-6xl text-bold\"\n          >\n            {posts.title}\n          </h1>\n          <h2\n            ref={textTwo}\n            className=\"mt-2 text-xl max-w-4xl text-darkgray opacity-50\"\n          >\n            {posts.tagline}\n          </h2>\n        </div>\n        <ContentSection content={posts.content}></ContentSection>\n        <Footer />\n      </div>\n      {process.env.NODE_ENV === \"development\" && (\n        <div className=\"fixed bottom-6 right-6\">\n          <Button onClick={() => setShowEditor(true)} type={\"primary\"}>\n            Edit this blog\n          </Button>\n        </div>\n      )}\n\n      {showEditor && (\n        <BlogEditor\n          post={post}\n          close={() => setShowEditor(false)}\n          refresh={() => router.reload(window.location.pathname)}\n        />\n      )}\n    </>\n  );\n};\nexport async function getStaticProps( context ) {\n  try {\n    \n    \n    const { locale, params } = context;\n    const { slug } = params; \n    const language = locale || 'en';\n    \n    console.log(\"BlogPostSLUG--getStaticProps Obteniendo post para:locale\", language);\n    const post = getPostBySlug(language,slug, [\n      \"date\",\n      \"slug\",\n      \"preview\",\n      \"title\",\n      \"tagline\",\n      \"preview\",\n      \"image\",\n      \"content\",\n    ]);\n\n    return {\n      props: {\n        post: {\n          ...post,\n           \n        },\n      },\n    };\n} catch (error) {\n  console.error(\"Error en getStaticProps:\", error);\n  return { notFound: true };\n}\n}\n\nexport async function getStaticPaths(context) {\n  const { locale } = context;\n  const language = locale || 'en';\n\n  console.log(\"Obteniendo getStaticPaths para locale:\", language);\n\n  const posts = getAllPosts(language,[\"slug\"]);\n\n  return {\n    paths: posts.map((post) => {\n      return {\n        params: {\n          slug: post.slug,\n        },\n      };\n    }),\n    fallback: false,\n  };\n} \n  \nexport default BlogPost;","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\edit.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\frameworks\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\frameworks\\[slug].js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\index.js",["152"],[],"import { useRef, useContext,useEffect } from \"react\";\nimport Header from \"../components/Header\";\nimport ServiceCard from \"../components/ServiceCard\";\nimport Socials from \"../components/Socials\";\nimport WorkCard from \"../components/WorkCard\";\nimport { useIsomorphicLayoutEffect } from \"../utils\";\nimport { stagger } from \"../animations\";\nimport Footer from \"../components/Footer\";\nimport Head from \"next/head\";\nimport Button from \"../components/Button\";\nimport Link from \"next/link\";\nimport Cursor from \"../components/Cursor\";\nimport { LanguageContext } from \"../context/LanguageContext\"; // Importa el contexto\n\n\nexport default function Home() {\n  // Ref\n  const workRef = useRef();\n  const aboutRef = useRef();\n  const textOne = useRef();\n  const textTwo = useRef();\n  const textThree = useRef();\n  const textFour = useRef();\n  const textFive = useRef();\n\n  // Contexto de idioma\n  const { language } = useContext(LanguageContext);\n\n  // Cargar datos dinámicamente según el idioma\n  const data = require(`../src/translations/${language}/portfolio.json`);\n  const dataInit = require(`../src/translations/${language}/${language}.json`);\n  \n  // Handling Scroll\n  const handleWorkScroll = () => {\n    window.scrollTo({\n      top: workRef.current.offsetTop,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(() => {\n    console.log(\"home.index.js --data.showCursor\", data.showCursor); \n  }, []); \n  const handleAboutScroll = () => {\n    window.scrollTo({\n      top: aboutRef.current.offsetTop,\n      left: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  useIsomorphicLayoutEffect(() => {\n    stagger(\n      [textOne.current, textTwo.current, textThree.current, textFour.current, textFive.current],\n      { y: 40, x: -10, transform: \"scale(0.95) skew(10deg)\" },\n      { y: 0, x: 0, transform: \"scale(1)\" }\n    );\n  }, [language]); // Añade language como dependencia para que se actualice al cambiar el idioma\n\n  return (\n    <div className={`relative ${data.showCursor && \"cursor-none\"}`}>\n      {data.showCursor && <Cursor />}\n      <Head>\n        <title>{data.name}</title>\n      </Head>\n\n      <div className=\"gradient-circle\"></div>\n      <div className=\"gradient-circle-bottom\"></div>\n\n      <div className=\"container mx-auto mb-10\">\n        <Header\n          handleWorkScroll={handleWorkScroll}\n          handleAboutScroll={handleAboutScroll}\n        />\n        <div className=\"laptop:mt-20 mt-10\">\n          <div className=\"mt-5\">\n            <h1\n              ref={textOne}\n              className=\"text-3xl tablet:text-6xl laptop:text-6xl laptopl:text-8xl p-1 tablet:p-2 text-bold w-4/5 mob:w-full laptop:w-4/5\"\n            >\n              {data.headerTaglineOne}\n            </h1>\n            <h1\n              ref={textTwo}\n              className=\"text-3xl tablet:text-6xl laptop:text-6xl laptopl:text-8xl p-1 tablet:p-2 text-bold w-full laptop:w-4/5\"\n            >\n              {data.headerTaglineTwo}\n            </h1>\n            <h1\n              ref={textThree}\n              className=\"text-3xl tablet:text-6xl laptop:text-6xl laptopl:text-8xl p-1 tablet:p-2 text-bold w-full laptop:w-4/5\"\n            >\n              {data.headerTaglineThree}\n            </h1>\n            <h1\n              ref={textFour}\n              className=\"text-3xl tablet:text-6xl laptop:text-6xl laptopl:text-8xl p-1 tablet:p-2 text-bold w-full laptop:w-4/5\"\n            >\n              {data.headerTaglineFour}\n            </h1>\n            <h1\n              ref={textFive}\n              className=\"text-3xl tablet:text-6xl laptop:text-6xl laptopl:text-8xl p-1 tablet:p-2 text-bold w-full laptop:w-4/5\"\n            >\n              {data.headerTaglineFive}\n            </h1>\n          </div>\n\n          <Socials className=\"mt-2 laptop:mt-5\" />\n        </div>\n        <div className=\"mt-10 laptop:mt-30 p-2 laptop:p-0\" ref={workRef}>\n          <h1 className=\"text-2xl text-bold\">{dataInit.init.work}</h1>\n\n          <div className=\"mt-5 laptop:mt-10 grid grid-cols-1 tablet:grid-cols-2 gap-4\">\n            {data.projects.map((project) => (\n              <WorkCard\n                key={project.id}\n                img={project.imageSrc}\n                name={project.title}\n                description={project.description}\n                onClick={() => window.open(project.url)}\n              />\n            ))}\n          </div>\n        </div>\n\n        <div className=\"mt-10 laptop:mt-30 p-2 laptop:p-0\">\n          <h1 className=\"tablet:m-10 text-2xl text-bold\">{dataInit.init.services}</h1>\n          <div className=\"mt-5 tablet:m-10 grid grid-cols-1 laptop:grid-cols-2 gap-6\">\n            {data.services.map((service, index) => (\n              <ServiceCard\n                key={index}\n                name={service.title}\n                description={service.description}\n              />\n            ))}\n          </div>\n        </div>\n        {/* This button should not go into production */}\n        {process.env.NODE_ENV === \"development\" && (\n          <div className=\"fixed bottom-5 right-5\">\n            <Link href=\"/edit\">\n              <Button type=\"primary\">Edit Data</Button>\n            </Link>\n          </div>\n        )}\n        <div className=\"mt-10 laptop:mt-40 p-2 laptop:p-0\" ref={aboutRef}>\n          <h1 className=\"tablet:m-10 text-2xl text-bold\">{dataInit.init.about}</h1>\n          <p className=\"tablet:m-10 mt-2 text-xl laptop:text-3xl w-full laptop:w-3/5\">\n            {data.aboutparaBloque1}\n          </p>\n          <p className=\"tablet:m-10 mt-2 text-xl laptop:text-3xl w-full laptop:w-3/5\">\n            {data.aboutparaBloque2}\n          </p>\n          <p className=\"tablet:m-10 mt-2 text-xl laptop:text-3xl w-full laptop:w-3/5\">\n            {data.aboutparaBloque3}\n          </p>\n          <p className=\"tablet:m-10 mt-2 text-xl laptop:text-3xl w-full laptop:w-3/5\">\n            {data.aboutparaBloque4}\n          </p>\n        </div>\n        <Footer />\n      </div>\n    </div>\n  );\n}","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\resume.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\pages\\_app.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\BlogEditor\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Button\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ContentSection\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Cursor\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Footer\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\FrameworkListCards\\AppCard.js",["153","154"],[],"import React from 'react'; \r\n\r\nconst AppCard = ({ app }) => {\r\n  if (!app) {\r\n    console.error(\"App data is missing.\");\r\n    return <div>Error: Missing app data</div>;\r\n  }\r\n  console.log('AppTable:', app);\r\n  return (\r\n    <div className=\"app-card\">\r\n      <a href={app.appUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <h2>{app.name}</h2>\r\n        \r\n          <img src={app.imageUrl} alt={app.name} className=\"app-image\" />\r\n        \r\n        <div className=\"app-info\">\r\n          <h3>{app.name}</h3>\r\n          <p><strong>Descripción:</strong> {app.description}</p>\r\n          <p><strong>Tecnología:</strong> {app.technology}</p>\r\n          <p><a href={app.appUrl} target=\"_blank\" rel=\"noopener noreferrer\">Visitar App</a></p>\r\n          <p><a href={app.repoUrl} target=\"_blank\" rel=\"noopener noreferrer\">Repositorio en GitHub</a></p>\r\n          <p>\r\n          <img src={app.imageUrl} alt={app.name} className=\"app-image\" />\r\n          </p>\r\n        \r\n        </div>\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppCard;\r\n","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\FrameworkListCards\\AppTable.js",["155"],[],"import React from 'react';\r\n/* import AppCard from './AppCard' */;\r\nimport AppCard from \"../../components/FrameworkListCards/AppCard\";\r\n\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\n  // Mapeo de categorías con sus respectivas tecnologías y títulos\r\nconst categories = [\r\n  { title: \"React 18\", filter: \"React\", icon: \"/img/icons/react-icon.png\"  },\r\n  { title: \"Angular 17\", filter: \"Angular\", icon: \"/img/icons/angular-icon.png\"  },\r\n  { title: \"Spring Boot\", filter: \"Spring Framework\", icon:\"/img/icons/springboot-icon.png\" },\r\n  { title: \"Spring Cloud\", filter: \"Spring Cloud\", icon:\"/img/icons/springcloud-icon.png\" },\r\n  { title: \"Java\", filter: \"Java\", icon:\"/img/icons/java.png\" },\r\n  { title: \"Web jaoprogramador\", filter: \"HTML\", icon:\"/img/icons/html-icon.png\"  }\r\n];\r\n  \r\n/* const AppTable = ({ apps } ) => { */\r\nconst AppTable = ({ dataFrameworks = [] }) => {\r\n  \r\n  const text = useRef();\r\n  console.log('AppTable:', );\r\n\r\n  return (\r\n    <table className=\"app-table\">\r\n      {categories.map(({ title, filter, icon }) => {\r\n        //const filteredApps = apps.filter(app => app.technology.includes(filter));\r\n        const filteredApps = dataFrameworks.filter(app => app.technology && app.technology.includes(filter));\r\n\r\n        return (\r\n          <React.Fragment key={title}>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <div style={{ display: 'flex', alignItems: 'center', gap: '10px' }}>\r\n                  {/* <h1 ref={text}>{title}</h1>   className=\"mt-5 text-4xl\"*/}\r\n                  <h1 className=\"mt-5 text-4xl\">{title}</h1>\r\n                    <img \r\n                      src={icon} \r\n                      alt={`${title} icon`} \r\n                      style={{ width: '24px', height: '24px' }} \r\n                    />\r\n                  </div>\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  \r\n                  {filteredApps.length > 0 ? (\r\n                    filteredApps.map((app) => (\r\n                      <AppCard key={app.name} app={app} />\r\n                    ))\r\n                  ) : (\r\n                    <p>No hay aplicaciones en esta categoría.</p>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default AppTable;\r\n\r\n","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Header\\index.js",["156","157","158"],[],"\n\nimport { Popover } from \"@headlessui/react\";\nimport { useTheme } from \"next-themes\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"react-i18next\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Button from \"../Button\";\nimport Select from \"../SelectLanguaje\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\nimport data from \"../../data/portfolio.json\";\n\nconst Header = ({ handleWorkScroll, handleAboutScroll, isBlog }) => {\n  const router = useRouter();\n  const { theme, setTheme } = useTheme();\n  const { t, i18n } = useTranslation();\n  const { language, setLanguage } = useContext(LanguageContext);\n  const dataHeader = require(`../../src/translations/${language}/${language}.json`);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value);\n  };\n\n  return (\n    <>\n      <Popover className=\"block tablet:hidden mt-5\">\n        {({ open }) => (\n          <>\n            <div className=\"flex items-center justify-between p-2 laptop:p-0\">\n              <h1 onClick={() => router.push(\"/\")} className=\"font-medium p-2 laptop:p-0 link\">\n                {data.name}.\n              </h1>\n\n              <div className=\"flex items-center\">\n              \n              <Select\n                value={language}\n                onChange={handleLanguageChange}\n                options={[\n                  { value: \"es\", label: \"🇪🇸 Castellano\" },\n                  { value: \"en\", label: \"🇬🇧 English\" },\n                  { value: \"eu\", label: \"🇪🇺 Euskera\" }\n                ]}\n              />\n                {data.darkMode && (\n                  <Button onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}>\n                    <img className=\"h-6\" src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`} alt=\"Toggle theme\" />\n                  </Button>\n                )}\n\n                <Popover.Button>\n                  <img className=\"h-5\" src={`/images/${!open ? (theme === \"dark\" ? \"menu-white.svg\" : \"menu.svg\") : theme === \"light\" ? \"cancel.svg\" : \"cancel-white.svg\"}`} alt=\"Menu toggle\" />\n                </Popover.Button>\n              </div>\n            </div>\n\n            <Popover.Panel className={`absolute right-0 z-10 w-11/12 p-4 ${theme === \"dark\" ? \"bg-slate-800\" : \"bg-white\"} shadow-md rounded-md`}>\n              <div className=\"grid grid-cols-1\">\n                {isBlog && <Button onClick={() => router.push(\"/\")}>Home</Button>}\n                <Button onClick={handleWorkScroll}>{dataHeader.headers.work}</Button>\n                <Button onClick={handleAboutScroll}>{dataHeader.headers.about}</Button>\n                <Button onClick={() => router.push(\"/blog\")}>{dataHeader.headers.blog}</Button>\n                <Button onClick={() => router.push(\"/frameworks\")}>{dataHeader.headers.frameworks}</Button>\n                <Button onClick={() => router.push(\"/resume\")}>{dataHeader.headers.resume}</Button>\n                <Button onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}>{dataHeader.headers.contact}</Button>\n              </div>\n            </Popover.Panel>\n          </>\n        )}\n      </Popover>\n\n      <div className=\"mt-10 hidden flex-row items-center justify-between sticky dark:text-white top-0 z-10 tablet:flex\">\n        <h1 onClick={() => router.push(\"/\")} className=\"font-medium cursor-pointer\">\n          {data.name}.\n        </h1>\n        <div className=\"flex\">\n          {isBlog && <Button onClick={() => router.push(\"/\")}>Home</Button>}\n          <Button onClick={handleWorkScroll}>{dataHeader.headers.work}</Button>\n          <Button onClick={handleAboutScroll}>{dataHeader.headers.about}</Button>\n          <Button onClick={() => router.push(\"/blog\")}>{dataHeader.headers.blog}</Button>\n          <Button onClick={() => router.push(\"/frameworks\")}>{dataHeader.headers.frameworks}</Button>\n          <Button onClick={() => router.push(\"/resume\")}>{dataHeader.headers.resume}</Button>\n          <Button onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}>{dataHeader.headers.contact}</Button>\n         \n          <Select\n                value={language}\n                onChange={handleLanguageChange}\n                options={[\n                  { value: \"es\", label: \"🇪🇸 Castellano\" },\n                  { value: \"en\", label: \"🇬🇧 English\" },\n                  { value: \"eu\", label: \"🇪🇺 Euskera\" }\n                ]}\n              />\n          {mounted && theme && data.darkMode && (\n            <Button onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}>\n              <img className=\"h-6\" src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`} alt=\"Toggle theme\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n/* import { Popover } from \"@headlessui/react\";\nimport { useTheme } from \"next-themes\";\nimport { useRouter } from \"next/router\";\nimport { useTranslation } from \"react-i18next\";\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Button from \"../Button\";\nimport Select from \"../SelectLanguaje\";\nimport { LanguageContext } from \"../../context/LanguageContext\";\n\nconst Header = ({ handleWorkScroll, handleAboutScroll, isBlog }) => {\n\n  const router = useRouter();\n  const { theme, setTheme } = useTheme();\n  const { t, i18n } = useTranslation();\n  const { language, setLanguage } = useContext(LanguageContext);\n  const data = require(`../../src/translations/${language}/${language}.json`);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const handleLanguageChange = (e) => {\n    setLanguage(e.target.value);\n  };\n\n  return (\n    <>\n      <Popover className=\"block tablet:hidden mt-5\">\n        {({ open }) => (\n          <>\n            <div className=\"flex items-center justify-between p-2 laptop:p-0\">\n              <h1 onClick={() => router.push(\"/\")} className=\"font-medium p-2 laptop:p-0 link\">\n                {data.name}.\n              </h1>\n\n              <div className=\"flex items-center\">\n              <Select\n                value={language}\n                onChange={handleLanguageChange}\n                options={[\n                  { value: \"es\", label: \"🇪🇸 Castellano\" },\n                  { value: \"en\", label: \"🇬🇧 English\" },\n                  { value: \"eu\", label: \"🇪🇺 Euskera\" }\n                ]}\n              />\n\n                {data.darkMode && (\n                  <Button onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}>\n                    <img className=\"h-6\" src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`} alt=\"Toggle theme\" />\n                  </Button>\n                )}\n\n                <Popover.Button>\n                  <img className=\"h-5\" src={`/images/${!open ? (theme === \"dark\" ? \"menu-white.svg\" : \"menu.svg\") : theme === \"light\" ? \"cancel.svg\" : \"cancel-white.svg\"}`} alt=\"Menu toggle\" />\n                </Popover.Button>\n              </div>\n            </div>\n\n            <Popover.Panel className={`absolute right-0 z-10 w-11/12 p-4 ${theme === \"dark\" ? \"bg-slate-800\" : \"bg-white\"} shadow-md rounded-md`}>\n              <div className=\"grid grid-cols-1\">\n                {isBlog && <Button onClick={() => router.push(\"/\")}>Home</Button>}\n                <Button onClick={handleWorkScroll}>{data.headers.work}</Button>\n                <Button onClick={handleAboutScroll}>{data.headers.about}</Button>\n                <Button onClick={() => router.push(\"/blog\")}>{data.headers.blog}</Button>\n                <Button onClick={() => router.push(\"/frameworks\")}>{data.headers.frameworks}</Button>\n                <Button onClick={() => router.push(\"/resume\")}>{data.headers.resume}</Button>\n                <Button onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}>{data.headers.contact}</Button>\n              </div>\n            </Popover.Panel>\n          </>\n        )}\n      </Popover>\n\n      <div className=\"mt-10 hidden flex-row items-center justify-between sticky dark:text-white top-0 z-10 tablet:flex\">\n        <h1 onClick={() => router.push(\"/\")} className=\"font-medium cursor-pointer\">\n          {data.name}.\n        </h1>\n        <div className=\"flex\">\n          {isBlog && <Button onClick={() => router.push(\"/\")}>Home</Button>}\n          <Button onClick={handleWorkScroll}>{data.headers.work}</Button>\n          <Button onClick={handleAboutScroll}>{data.headers.about}</Button>\n          <Button onClick={() => router.push(\"/blog\")}>{data.headers.blog}</Button>\n          <Button onClick={() => router.push(\"/frameworks\")}>{data.headers.frameworks}</Button>\n          <Button onClick={() => router.push(\"/resume\")}>{data.headers.resume}</Button>\n          <Button onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}>{data.headers.contact}</Button>\n\n         \n          <Select\n              value={language}\n              onChange={handleLanguageChange}\n              options={[\n                { value: \"es\", label: \"🇪🇸 Castellano\" },\n                { value: \"en\", label: \"🇺🇸 English\" },\n                { value: \"eu\", label: \"🇪🇺 Euskera\" }\n              ]}\n            />\n          {mounted && theme && data.darkMode && (\n            <Button onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}>\n              <img className=\"h-6\" src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`} alt=\"Toggle theme\" />\n            </Button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Header; */\n\n\n\n/* import { Popover } from \"@headlessui/react\";\nimport { useTheme } from \"next-themes\";\nimport { useRouter } from \"next/router\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"../Button\";\n// Local Data\nimport data from \"../../data/portfolio.json\";\n\nconst Header = ({ handleWorkScroll, handleAboutScroll, isBlog }) => {\n  const router = useRouter();\n  const { theme, setTheme } = useTheme();\n  const [mounted, setMounted] = useState(false);\n\n  const { name, showBlog, showResume } = data;\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  return (\n    <>\n      <Popover className=\"block tablet:hidden mt-5\">\n        {({ open }) => (\n          <>\n            <div className=\"flex items-center justify-between p-2 laptop:p-0\">\n              <h1\n                onClick={() => router.push(\"/\")}\n                className=\"font-medium p-2 laptop:p-0 link\"\n              >\n                {name}.\n              </h1>\n\n              <div className=\"flex items-center\">\n                {data.darkMode && (\n                  <Button\n                    onClick={() =>\n                      setTheme(theme === \"dark\" ? \"light\" : \"dark\")\n                    }\n                  >\n                    <img\n                      className=\"h-6\"\n                      src={`/images/${\n                        theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"\n                      }`}\n                    ></img>\n                  </Button>\n                )}\n\n                <Popover.Button>\n                  <img\n                    className=\"h-5\"\n                    src={`/images/${\n                      !open\n                        ? theme === \"dark\"\n                          ? \"menu-white.svg\"\n                          : \"menu.svg\"\n                        : theme === \"light\"\n                        ? \"cancel.svg\"\n                        : \"cancel-white.svg\"\n                    }`}\n                  ></img>\n                </Popover.Button>\n              </div>\n            </div>\n            <Popover.Panel\n              className={`absolute right-0 z-10 w-11/12 p-4 ${\n                theme === \"dark\" ? \"bg-slate-800\" : \"bg-white\"\n              } shadow-md rounded-md`}\n            >\n              {!isBlog ? (\n                <div className=\"grid grid-cols-1\">\n                  <Button onClick={handleWorkScroll}>Work</Button>\n                  <Button onClick={handleAboutScroll}>About</Button>\n                  {showBlog && (\n                    <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\n                  )}\n                  {showBlog && (\n                    <Button onClick={() => router.push(\"/frameworks\")}>Frameworks</Button>\n                  )}\n                  {showResume && (\n                    <Button\n                      onClick={() =>\n                        window.open(\"mailto:jaoprogramador@gmail.com\")\n                      }\n                    >\n                      Resume\n                    </Button>\n                  )}\n\n                  <Button\n                    onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}\n                  >\n                    Contact\n                  </Button>\n                </div>\n              ) : (\n                <div className=\"grid grid-cols-1\">\n                  <Button onClick={() => router.push(\"/\")} classes=\"first:ml-1\">\n                    Home\n                  </Button>\n                  {showBlog && (\n                    <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\n                  )}\n                  {showBlog && (\n                    <Button onClick={() => router.push(\"/frameworks\")}>Frameworks</Button>\n                  )}\n                  {showResume && (\n                    <Button\n                      onClick={() => router.push(\"/resume\")}\n                      classes=\"first:ml-1\"\n                    >\n                      Resume\n                    </Button>\n                  )}\n\n                  <Button\n                    onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}\n                  >\n                    Contact\n                  </Button>\n                </div>\n              )}\n            </Popover.Panel>\n          </>\n        )}\n      </Popover>\n      <div\n        className={`mt-10 hidden flex-row items-center justify-between sticky ${\n          theme === \"light\" && \"bg-white\"\n        } dark:text-white top-0 z-10 tablet:flex`}\n      >\n        <h1\n          onClick={() => router.push(\"/\")}\n          className=\"font-medium cursor-pointer mob:p-2 laptop:p-0\"\n        >\n          {name}.\n        </h1>\n        {!isBlog ? (\n          <div className=\"flex\">\n            <Button onClick={handleWorkScroll}>Work</Button>\n            <Button onClick={handleAboutScroll}>About</Button>\n            {showBlog && (\n              <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\n            )}\n            {showBlog && (\n              <Button onClick={() => router.push(\"/frameworks\")}>Frameworks</Button>\n            )}\n            {showResume && (\n              <Button\n                onClick={() => router.push(\"/resume\")}\n                classes=\"first:ml-1\"\n              >\n                Resume\n              </Button>\n            )}\n\n            <Button onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}>\n              Contact\n            </Button>\n            {mounted && theme && data.darkMode && (\n              <Button\n                onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n              >\n                <img\n                  className=\"h-6\"\n                  src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`}\n                ></img>\n              </Button>\n            )}\n          </div>\n        ) : (\n          <div className=\"flex\">\n            <Button onClick={() => router.push(\"/\")}>Home</Button>\n            {showBlog && (\n              <Button onClick={() => router.push(\"/blog\")}>Blog</Button>\n            )}\n            {showBlog && (\n              <Button onClick={() => router.push(\"/frameworks\")}>Frameworks</Button>\n            )}\n            {showResume && (\n              <Button\n                onClick={() => router.push(\"/resume\")}\n                classes=\"first:ml-1\"\n              >\n                Resume\n              </Button>\n            )}\n\n            <Button onClick={() => window.open(\"mailto:jaoprogramador@gmail.com\")}>\n              Contact\n            </Button>\n\n            {mounted && theme && data.darkMode && (\n              <Button\n                onClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\n              >\n                <img\n                  className=\"h-6\"\n                  src={`/images/${theme === \"dark\" ? \"moon.svg\" : \"sun.svg\"}`}\n                ></img>\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Header;\n */","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ProjectResume\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ResumeDownload\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\SelectLanguaje\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\SelectLanguaje\\indexBanderas.js",["159","160"],[],"import Select from \"react-select\";\r\n\r\nconst options = [\r\n  {\r\n    value: \"en\",\r\n    label: \"English\",\r\n    image: \"/img/icons/inglaterraBandera.png\",\r\n  },\r\n  {\r\n    value: \"es\",\r\n    label: \"Castellano\",\r\n    image: \"/img/icons/espaniaBandera.png\",\r\n  },\r\n  {\r\n    value: \"eu\",\r\n    label: \"Euskera\",\r\n    image: \"/img/icons/euskadiBandera.png\",\r\n  },\r\n];\r\n\r\n// Personaliza la opción seleccionada\r\nconst customSingleValue = ({ data }) => (\r\n  <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n    <img src={data.image} alt={data.label} style={{ width: 24, height: 16 }} />\r\n    {data.label}\r\n  </div>\r\n);\r\n\r\n// Personaliza el menú de opciones\r\nconst customOption = (props) => {\r\n  const { data, innerRef, innerProps } = props;\r\n  return (\r\n    <div\r\n      ref={innerRef}\r\n      {...innerProps}\r\n      style={{\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        padding: \"10px\",\r\n        cursor: \"pointer\",\r\n      }}\r\n    >\r\n      <img src={data.image} alt={data.label} style={{ width: 24, height: 16, marginRight: \"10px\" }} />\r\n      {data.label}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LanguageSelector = ({ language, setLanguage }) => {\r\n  return (\r\n    <Select\r\n    options={options}\r\n    value={options.find((opt) => opt.value === language)}\r\n    onChange={(selected) => setLanguage(selected.value)}\r\n    placeholder=\"Idioma\"\r\n    components={{ SingleValue: customSingleValue, Option: customOption }}\r\n    styles={{\r\n      control: (base) => ({\r\n        ...base,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        minWidth: \"120px\", // Ajusta el ancho\r\n        padding: \"4px 8px\", // Mejora el espaciado interno\r\n        borderRadius: \"8px\",\r\n      }),\r\n      singleValue: (base) => ({\r\n        ...base,\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n      }),\r\n    }}\r\n  \r\n    />\r\n  );\r\n};\r\n\r\nexport default LanguageSelector;\r\n","C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\ServiceCard\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\Socials\\index.js",[],[],"C:\\Users\\user\\Documents\\Juan PC guillermo SpringAngularAWS\\JAO\\reactWorkspace\\projects\\portfolio-apps-jao\\components\\WorkCard\\index.js",["161"],[],"import React from \"react\";\n\nconst WorkCard = ({ img, name, description, onClick }) => {\n  return (\n    <div\n      className=\"overflow-hidden rounded-lg p-2 laptop:p-4 first:ml-0 link\"\n      onClick={onClick}\n    >\n      <div\n        className=\"relative rounded-lg overflow-hidden transition-all ease-out duration-300 h-48 mob:h-auto\"\n        style={{ height: \"600px\" }}\n      >\n        <img\n          alt={name}\n          className=\"h-full w-full object-cover hover:scale-110 transition-all ease-out duration-300\"\n          src={img}\n        ></img>\n      </div>\n      <h1 className=\"mt-5 text-3xl font-medium\">\n        {name ? name : \"Project Name\"}\n      </h1>\n      <h2 className=\"text-xl opacity-50\">\n        {description ? description : \"Description\"}\n      </h2>\n    </div>\n  );\n};\n\nexport default WorkCard;\n",{"ruleId":"162","severity":1,"message":"163","line":88,"column":21,"nodeType":"164","endLine":92,"endColumn":22},{"ruleId":"162","severity":1,"message":"163","line":66,"column":11,"nodeType":"164","endLine":70,"endColumn":12},{"ruleId":"165","severity":1,"message":"166","line":44,"column":6,"nodeType":"167","endLine":44,"endColumn":8,"suggestions":"168"},{"ruleId":"162","severity":1,"message":"163","line":14,"column":11,"nodeType":"164","endLine":14,"endColumn":74},{"ruleId":"162","severity":1,"message":"163","line":23,"column":11,"nodeType":"164","endLine":23,"endColumn":74},{"ruleId":"162","severity":1,"message":"163","line":37,"column":21,"nodeType":"164","endLine":41,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":52,"column":21,"nodeType":"164","endLine":52,"endColumn":124},{"ruleId":"162","severity":1,"message":"163","line":57,"column":19,"nodeType":"164","endLine":57,"endColumn":194},{"ruleId":"162","severity":1,"message":"163","line":101,"column":15,"nodeType":"164","endLine":101,"endColumn":118},{"ruleId":"162","severity":1,"message":"163","line":24,"column":5,"nodeType":"164","endLine":24,"endColumn":80},{"ruleId":"162","severity":1,"message":"163","line":43,"column":7,"nodeType":"164","endLine":43,"endColumn":103},{"ruleId":"162","severity":1,"message":"163","line":13,"column":9,"nodeType":"164","endLine":17,"endColumn":10},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data.showCursor'. Either include it or remove the dependency array.","ArrayExpression",["169"],{"desc":"170","fix":"171"},"Update the dependencies array to be: [data.showCursor]",{"range":"172","text":"173"},[1405,1407],"[data.showCursor]"]